// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


datasource db {
  provider = "postgres"
  url = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model Player {
  id           String         @id @default(uuid())
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  room         Room[]
  roomPlayer   RoomPlayer[]
  playerAnswer PlayerAnswer[]
}

model Room {
  id         String       @id @default(uuid())
  hostId     String
  host       Player       @relation(fields: [hostId], references: [id])
  key        String
  title      String
  question   Question[]
  roomPlayer RoomPlayer[]
}

enum QuestionType {
  MCQ // Multiple Choice
  TF // True or False
}

model Question {
  id           String         @id @default(uuid())
  roomId       String
  room         Room           @relation(fields: [roomId], references: [id])
  createdAt    DateTime       @default(now())
  isPublished  Boolean        @default(false)
  questionType QuestionType
  mcqQuestion  MCQQuestion?
  playerAnswer PlayerAnswer[]
}

model MCQQuestion {
  qid           String      @id
  question      Question    @relation(fields: [qid], references: [id])
  description   String
  options       MCQOption[]
  correctAnswer Int?
}

model MCQOption {
  id                      Int                       @id @default(autoincrement())
  description             String
  questionId              String
  createdAt               DateTime                  @default(now())
  mcqQuestion             MCQQuestion               @relation(fields: [questionId], references: [qid])
  mCQQuestionPlayerAnswer MCQQuestionPlayerAnswer[]
}

model RoomPlayer {
  pid    String
  player Player @relation(fields: [pid], references: [id])
  roomId String
  room   Room   @relation(fields: [roomId], references: [id])

  @@id([pid, roomId])
}

model PlayerAnswer {
  pid                     String
  player                  Player                   @relation(fields: [pid], references: [id])
  qid                     String
  question                Question                 @relation(fields: [qid], references: [id])
  mcqQuestionPlayerAnswer MCQQuestionPlayerAnswer?

  @@id([pid, qid])
}

model MCQQuestionPlayerAnswer {
  pid          String
  qid          String
  playerAnswer PlayerAnswer @relation(fields: [pid, qid], references: [pid, qid])
  answerId     Int // ID of the option attempted
  mcqOption    MCQOption    @relation(fields: [answerId], references: [id])


  @@id([pid, qid])
}
